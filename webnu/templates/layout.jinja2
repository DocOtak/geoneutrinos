<!DOCTYPE html>
<head>
  {% block head %}
  <title>{% block title %} Homepage {% endblock %}</title>
  {% endblock %}
  <link rel="stylesheet" type="text/css" href="/css/common.css" />
<style>
  .plates{
    fill:none;
    stroke:#fff;
    }


  svg,
  canvas {
    position: absolute;
  }
</style>
  <script type="text/javascript" src="/js/jquery-1.7.1.min.js"></script>
  <script src="/js/d3.v3.min.js"></script>
  <script src="/js/d3.geo.projection.v0.min.js" charset="utf-8"></script>
  <script src="/js/topojson.v1.min.js"></script>
  <script type="text/javascript">
    function updateThings(){
      var values = [];
      var plotsrc = "";
      $('input[name=layer]:checked').each(function(){
          values.push($(this).val());
          });
      plotsrc = "plot.json?layers=" + values.join("") + "&output=t";

      var width = 960,
          height = 480;

      var projection = d3.geo.equirectangular()
        .scale(153)
        .rotate([0,0])
        .translate([width / 2, height /2])
        .precision(.1);

      var path = d3.geo.path()
        .projection(projection);

      d3.json(plotsrc, function(heatmap) {
          var dx = heatmap[0].length,
          dy = heatmap.length;

          // Fix the aspect ratio.
          // var ka = dy / dx, kb = height / width;
          // if (ka < kb) height = width * ka;
          // else width = height / ka;

          var x = d3.scale.linear()
          .domain([0, dx])
          .range([0, width]);

          var y = d3.scale.linear()
          .domain([0, dy])
          .range([height, 0]);

          var color = d3.scale.linear()
          .domain([95, 115, 135, 155, 175, 195])
          .range(["#0a0", "#6c0", "#ee0", "#eb4", "#eb9", "#fff"]);

          var xAxis = d3.svg.axis()
            .scale(x)
            .orient("top")
            .ticks(20);

          var yAxis = d3.svg.axis()
            .scale(y)
            .orient("right");

          d3.select("#content").append("canvas")
            .attr("width", dx)
            .attr("height", dy)
            .style("width", width + "px")
            .style("height", height + "px")
            .call(drawImage);

          var svg = d3.select("#content").append("svg")
            .attr("width", width)
            .attr("height", height);


          d3.json("/js/plates.json", function(collection) {
              feature = svg.selectAll()
              .data(collection.features)
              .enter().append("svg:path")
              .attr("d", path)
              .attr("class", "plates")
              });

          // Compute the pixel colors; scaled by CSS.
          function drawImage(canvas) {
            var context = canvas.node().getContext("2d"),
                image = context.createImageData(dx, dy);

            for (var y = 0, p = -1; y < dy; ++y) {
              for (var x = 0; x < dx; ++x) {
                var c = d3.rgb(color(heatmap[y][x]));
                image.data[++p] = c.r;
                image.data[++p] = c.g;
                image.data[++p] = c.b;
                image.data[++p] = 255;
              }
            }

            context.putImageData(image, 0, 0);
          }

          function removeZero(axis) {
            axis.selectAll("g").filter(function(d) { return !d; }).remove();
          }
      });

    }
$(document).ready(function() {

    updateThings();

    // do stuff
    $('input').click(updateThings);
    updateThings;
    });
</script>
</head>
<body>
  <div id="header">
    <div id="nav">
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/model">Model</a></li>
      </ul>
    </div>

  </div>
  <div id="content">{% block content %}
    <div id="testimg">
      <select>
        <option>Thickness</option>
      </select>
      <input id='s' type="checkbox" name="layer" value="s" /><label for="s">Soft Sediments</label>
      <input id='h' type="checkbox" name="layer" value="h" /><label for="h">Hard Sediment</label>
      <input id='u' type="checkbox" name="layer" value="u" /><label for="u">Upper Crust</label>
      <input id='m' type="checkbox" name="layer" value="m" /><label for="m">Middle Crust</label>
      <input id='l' type="checkbox" name="layer" value="l" /><label for="l">Lower Crust</label>
      <!-- <img src='/plot.png?layers=&output=t' /> -->
      <textarea id='t'></textarea>
    </div>
    {% endblock %}</div>
  </body
</html>
